<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" 
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    
    <http pattern="/images/**" security="none" />
    <http pattern="/js/**" security="none" />
    <http pattern="/css/**" security="none" />
    <http pattern="/login**" security="none" />
    <http pattern="/image.jpg" security="none" />
    <http pattern="/ws/**" security="none" />
    <http pattern="/appinfo.html" security="none" />
    
    
	<http entry-point-ref="authenticationProcessingFilterEntryPoint">
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
    	<custom-filter ref="validateCodeFilter" position="FORM_LOGIN_FILTER"/>
    	<custom-filter ref="logoutFilter" position="LOGOUT_FILTER"/>
		<custom-filter ref="securityFilter" before="FILTER_SECURITY_INTERCEPTOR" />
		<custom-filter ref="sessionManagementFilter" position="CONCURRENT_SESSION_FILTER" />
  	</http> 
  	
  	<!-- login -->
  	<beans:bean id="validateCodeFilter" class="com.chinarewards.metro.core.security.ValidateCodeFilter">
  		<beans:property name="authenticationManager" ref="authenticationManager" />
  		<beans:property name="filterProcessesUrl" value="/j_spring_security_check" />  
    	<beans:property name="authenticationSuccessHandler" ref="successHandler" />  
    	<beans:property name="authenticationFailureHandler" ref="failureHandler" />
  	</beans:bean>
  	
  	<beans:bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">  
    	<beans:property name="defaultTargetUrl" value="/authorize"></beans:property>
    	<beans:property name="alwaysUseDefaultTargetUrl" value="true"></beans:property>
    </beans:bean>  
	<beans:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">  
    	<beans:property name="defaultFailureUrl" value="/login?error=true"></beans:property>  
	</beans:bean>
  	
  	<beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">  
	    <beans:property name="loginFormUrl" value="/login"></beans:property>  
	</beans:bean>
	
	<!-- logout -->
	<beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
         <beans:constructor-arg value="/login" />
         <beans:constructor-arg>
             <beans:list>
                 <beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />   
             </beans:list>
         </beans:constructor-arg>
	</beans:bean> 
  	
  	<!-- session -->
  	<beans:bean id="sessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter">
  		<beans:constructor-arg>
  			<beans:bean class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />
  		</beans:constructor-arg>
  		<beans:property name="invalidSessionStrategy">
  			<beans:bean class="org.springframework.security.web.session.SimpleRedirectInvalidSessionStrategy">
  				<beans:constructor-arg value="/login" />
  			</beans:bean>
  		</beans:property>
  		<beans:property name="authenticationFailureHandler">
  			<beans:bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
  				<beans:constructor-arg value="/login" />
  			</beans:bean>
  		</beans:property>
  	</beans:bean>
  	
  	<beans:bean id="userService" class="com.chinarewards.metro.service.user.impl.UserService">
  		<beans:property name="hbDaoSupport" ref="hbDaoSupport" />
  		<beans:property name="jdbcDaoSupport" ref="jdbcDaoSupport" />
  	</beans:bean>
  	 
  	<!-- authentication -->
  	<authentication-manager alias="authenticationManager">
  		<authentication-provider user-service-ref="userService">
  			<password-encoder hash="md5" />
  		</authentication-provider>
  	</authentication-manager>
 
 	<!-- DecisionManager -->
	<beans:bean id="accessDecisionManager" class="com.chinarewards.metro.core.security.AccessManager">
 		<beans:property name="decisionVoters">
 			<beans:list>
 				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
 			</beans:list>
 		</beans:property>
 	</beans:bean>
 	 
 	<!-- limit expression --> 
  	<beans:bean id="expressionHandler" class="com.chinarewards.metro.core.security.AccessWebSecurityExpressionHandler" />
  	 
  	<beans:bean id="securityMetadataSource" class="com.chinarewards.metro.core.security.MyFilterInvocationSecurityMetadataSource" init-method="init">
  		<beans:property name="userService" ref="userService" />
  	</beans:bean>
  	
  	<!-- custom filter -->
 	<beans:bean id="securityFilter" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
 		<beans:property name="authenticationManager" ref="authenticationManager" />
 		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
 		<beans:property name="securityMetadataSource" ref="securityMetadataSource" />
 	</beans:bean>

</beans:beans>