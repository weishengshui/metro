<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd         http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<context:property-placeholder location="classpath*:*.properties"/>
	
	<context:component-scan base-package="com.chinarewards.metro">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${database.driverClassName}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
		<property name="maxActive" value="${database.maxActive}"/>
		<property name="maxIdle" value="${database.maxIdle}"/>
		<property name="maxWait" value="${database.maxWait}"/>
	</bean>  
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.chinarewards.metro.domain</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	
	<!-- 通用DaoSupport -->
	<bean id="hbDaoSupport" class="com.chinarewards.metro.core.common.HBDaoSupport">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="jdbcDaoSupport" class="com.chinarewards.metro.core.common.JDBCDaoSupport">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- transaction manager -->	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <tx:annotation-driven transaction-manager="transactionManager"/> 
    
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
			<tx:method name="*" propagation="REQUIRED"/>	        
	    </tx:attributes>
	</tx:advice>
	
	<aop:config>
	    <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.chinarewards.metro.service..*.*(..))"/>
	</aop:config>
	
	<!-- account sequence -->
    <bean id="accountNoGenarater"
        class="org.springframework.jdbc.support.incrementer.MySQLMaxValueIncrementer">
        <property name="incrementerName" value="AccountSequence"/> 
        <property name="columnName" value="sequenceid"/>
        <property name="cacheSize" value="10"/> 
        <property name="dataSource" ref="dataSource"/>
    </bean>
	
	<!-- transaction sequence -->
    <bean id="transactionNoGenerator"
        class="org.springframework.jdbc.support.incrementer.MySQLMaxValueIncrementer">
        <property name="incrementerName" value="TransactionSequence"/> 
        <property name="columnName" value="sequenceid"/>
        <property name="cacheSize" value="10"/> 
        <property name="dataSource" ref="dataSource"/>
    </bean>
	
<!--  	<import resource="classpath:timer.xml"/> -->
 	
 	<!--无法通过注解的方式注入 -->
 	
	 <bean name="initTelephoneTask" class="com.chinarewards.metro.service.message.InitTelephoneTask" init-method="init" destroy-method="destroy">
	 </bean>
	 <bean id="messageservice" class="com.chinarewards.metro.service.message.impl.MessageService" />
<!-- 	 <bean name="quartzSendMessage" class="com.chinarewards.metro.core.dynamicquartz.QuartzSendMessage" > -->
<!--   			<property name="messageservice" ref="messageservice" /> -->
<!-- 	  		<property name="communicationService" ref="communicationService" /> -->
<!-- 	  		<property name="taskExecutor" ref="taskExecutor" /> -->
<!--   	</bean> -->
	
	
	
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">        
	    <!-- 核心线程数，默认为1 -->        
	    <property name="corePoolSize" value="10" />        
	    <!-- 最大线程数，默认为Integer.MAX_VALUE -->        
	    <property name="maxPoolSize" value="50" />        
	    <!-- 队列最大长度，一般需要设置值>=notifyScheduledMainExecutor.maxNum；默认为Integer.MAX_VALUE -->        
	    <property name="queueCapacity" value="1000" />        
	    <!-- 线程池维护线程所允许的空闲时间，默认为60s -->        
	    <property name="keepAliveSeconds" value="300" />        
	    <!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->        
	    <property name="rejectedExecutionHandler">        
	        <!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->        
	        <!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->        
	        <!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->        
	        <!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->        
	        <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />        
	    </property>        
   </bean>  
<!-- 	<import resource="classpath:timer.xml"/> -->
	
</beans>
