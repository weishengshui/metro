<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd         http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	
    <!-- 定时器 -->
    
    <bean id="exampleBusinessObject" class="com.chinarewards.metro.core.timer.ExampleBusinessObject"/>
    
	<bean name="exampleJob" class="org.springframework.scheduling.quartz.JobDetailBean">
  		<property name="jobClass" value="com.chinarewards.metro.core.timer.EmailReportJob" />
  		<property name="jobDataAsMap">
	    	<map>
	      		<entry key="timeout" value="5" />
	    	</map>
  		</property>
	</bean>
	
	<bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
  		<property name="targetObject" ref="exampleBusinessObject" />
  		<property name="targetMethod" value="doIt" />
  		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
	    <!-- see the example of method invoking job above -->
	    <property name="jobDetail" ref="jobDetail" />
	    <!-- 5 seconds -->
	    <property name="startDelay" value="5000" />
	    <!-- repeat every 10 seconds -->
	    <property name="repeatInterval" value="10000" />
	</bean>

	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="exampleJob" />
	    <!-- 每天下午5点半运行一次 -->
	    <property name="cronExpression" value="0 30 17 * * ?" />
	</bean>
	
	<bean name="providers" class="com.chinarewards.metro.sms.ProviderService" init-method="init" destroy-method="destroy">
	</bean>
	
	<bean name="queueProc" class="com.chinarewards.metro.sms.QueueProcessor" init-method="initAllSP" destroy-method="destroyAllSP">
  		<property name="hbDaoSupport" ref="hbDaoSupport" />
  		<property name="providers" ref="providers" />
	</bean>
	
	<bean name="communicationService" class="com.chinarewards.metro.sms.CommunicationService">
  		<property name="hbDaoSupport" ref="hbDaoSupport" />
  		<property name="queueProc" ref="queueProc" />
	</bean>
	
	<bean name="smsHeartbeatTask" class="com.chinarewards.metro.web.SMSHeartbeatTask">
  		<property name="communicationService" ref="communicationService" />
	</bean>
	
	<bean name="smsJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
  		<property name="targetObject" ref="smsHeartbeatTask" />
		<property name="targetMethod" value="doIt" />
  		<property name="concurrent" value="false" />
	</bean>
	<bean id="smsTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="smsJob" />
	    <!-- 每秒运行一次 -->
	    <property name="cronExpression" value="0/1 * * * * ?" />
	</bean>
	
	<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	    <property name="triggers">
	        <list>
	            <ref bean="cronTrigger" />
	            <ref bean="simpleTrigger" />
	            <ref bean="smsTrigger" />
	        </list>
	    </property>
	</bean>
    	
</beans>
